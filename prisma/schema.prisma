generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model ShipperGroup {
  code        String   @id @map("_id")
  name        String   @unique
  description String
  createDate  DateTime @default(now())
  updateDate  DateTime @updatedAt
  status      Boolean  @default(true)

  Customer Customer[]

  @@map("shipperGroups")
}

enum CustomerType {
  Shipper
  Vendor
  Shipping
}

model Customer {
  code       String        @id @map("_id")
  type       CustomerType
  name       String        @unique
  group      ShipperGroup? @relation(fields: [groupCode], references: [code])
  groupCode  String?
  npwp       String?
  province   String
  city       String
  address    String
  telephone  String?
  fax        String?
  email      String?
  top        Int
  currency   String
  createDate DateTime      @default(now())
  updateDate DateTime      @updatedAt
  status     Boolean       @default(true)

  Vehicle                       Vehicle[]
  Vessel                        Vessel[]
  PriceVendor                   PriceVendor[]
  PriceShipping                 PriceShipping[]
  Quotation                     Quotation[]
  QuotationDetail               QuotationDetail[]        @relation("deliveryTo")
  TrackingAsalQuotationDetail   QuotationDetail[]        @relation("trackingAsalVendor")
  TrackingTujuanQuotationDetail QuotationDetail[]        @relation("trackingTujuanVendor")
  ShippingDetailQuotationDetail QuotationDetail[]        @relation("shippingDetailShipping")
  VesselSchedule                VesselSchedule[]
  InquiryContainer              InquiryContainer[]       @relation("shipper")
  PurchaseInquiryContainer      InquiryContainer[]       @relation("purchaseShipper")
  InquiryContainerDetail        InquiryContainerDetail[]

  @@map("customers")
}

model Route {
  code        String   @id @map("_id")
  province    String
  city        String
  origin      String
  destination String
  createDate  DateTime @default(now())
  updateDate  DateTime @updatedAt
  status      Boolean  @default(true)

  PriceShipper                  PriceShipper[]
  PriceVendorDetail             PriceVendorDetail[]
  PriceShippingDetail           PriceShippingDetail[]
  QuotationDetail               QuotationDetail[]        @relation("route")
  TrackingAsalQuotationDetail   QuotationDetail[]        @relation("trackingAsalRoute")
  TrackingTujuanQuotationDetail QuotationDetail[]        @relation("trackingTujuanRoute")
  ShippingDetailQuotationDetail QuotationDetail[]        @relation("shippingDetailRoute")
  InquiryContainerDetail        InquiryContainerDetail[]

  @@map("routes")
}

enum PortType {
  Arrival
  Departure
}

model Port {
  code       String   @id @map("_id")
  province   String
  city       String
  name       String
  type       PortType
  createDate DateTime @default(now())
  updateDate DateTime @updatedAt
  status     Boolean  @default(true)

  PriceVendorDetail             PriceVendorDetail[]
  PriceShippingDetail           PriceShippingDetail[]
  QuotationDetail               QuotationDetail[]
  PortOriginVesselSchedule      VesselSchedule[]      @relation("portOrigin")
  PortDestinationVesselSchedule VesselSchedule[]      @relation("portDestination")

  @@map("ports")
}

enum SalesJobPosition {
  Direktur
  Marketing
}

model Sales {
  code        String           @id @map("_id")
  jobPosition SalesJobPosition
  name        String
  nik         String
  cabang      String
  phoneNumber String
  telephone   String
  fax         String
  email       String
  createDate  DateTime         @default(now())
  updateDate  DateTime         @updatedAt
  status      Boolean          @default(true)

  Quotation        Quotation[]
  InquiryContainer InquiryContainer[]

  @@map("sales")
}

model Vehicle {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  vendor       Customer @relation(fields: [vendorCode], references: [code])
  vendorCode   String
  truckNumber  String   @unique
  merk         String
  truckType    String
  mesinNumber  String
  rangkaNumber String
  silinder     Int
  color        String
  stnkExpired  DateTime
  pajakExpired DateTime
  keurExpired  DateTime
  createDate   DateTime @default(now())
  updateDate   DateTime @updatedAt
  status       Boolean  @default(true)

  @@map("vehicles")
}

model Vessel {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  shipping     Customer @relation(fields: [shippingCode], references: [code])
  shippingCode String
  name         String   @unique
  capacity     Int
  satuan       String
  createDate   DateTime @default(now())
  updateDate   DateTime @updatedAt
  status       Boolean  @default(true)

  VesselSchedule         VesselSchedule[]
  InquiryContainerDetail InquiryContainerDetail[]

  @@map("vessels")
}

model PriceShipper {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  quotation       Quotation @relation(fields: [quotationNumber], references: [number])
  quotationNumber String
  route           Route     @relation(fields: [routeCode], references: [code])
  routeCode       String
  containerSize   String
  etcCost         Float
  createDate      DateTime  @default(now())
  updateDate      DateTime  @updatedAt
  status          Boolean   @default(true)

  @@map("priceShippers")
}

model PriceVendor {
  id                 String              @id @default(auto()) @map("_id") @db.ObjectId
  vendor             Customer            @relation(fields: [vendorCode], references: [code])
  vendorCode         String
  effectiveStartDate DateTime
  effectiveEndDate   DateTime
  details            PriceVendorDetail[]
  createDate         DateTime            @default(now())
  updateDate         DateTime            @updatedAt

  @@map("priceVendors")
}

model PriceVendorDetail {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  priceVendor   PriceVendor @relation(fields: [priceVendorId], references: [id])
  priceVendorId String      @db.ObjectId
  route         Route       @relation(fields: [routeCode], references: [code])
  routeCode     String
  containerSize String
  containerType String
  serviceType   String
  port          Port        @relation(fields: [portCode], references: [code])
  portCode      String
  trackingRate  Float
  buruh         Float
  thcOPT        Float
  thcOPP        Float
  adminBL       Float
  cleaning      Float
  materai       Float
  createDate    DateTime    @default(now())
  updateDate    DateTime    @updatedAt
  status        Boolean     @default(true)

  UangJalan UangJalan[]

  @@map("priceVendorDetails")
}

model PriceShipping {
  id                 String                @id @default(auto()) @map("_id") @db.ObjectId
  shipping           Customer              @relation(fields: [shippingCode], references: [code])
  shippingCode       String
  effectiveStartDate DateTime
  effectiveEndDate   DateTime
  details            PriceShippingDetail[]
  createDate         DateTime              @default(now())
  updateDate         DateTime              @updatedAt

  @@map("priceShippings")
}

model PriceShippingDetail {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  priceShipping   PriceShipping @relation(fields: [priceShippingId], references: [id])
  priceShippingId String        @db.ObjectId
  route           Route         @relation(fields: [routeCode], references: [code])
  routeCode       String
  containerSize   String
  containerType   String
  serviceType     String
  port            Port          @relation(fields: [portCode], references: [code])
  portCode        String
  freight         Float
  thcOPT          Float
  thcOPP          Float
  adminBL         Float
  cleaning        Float
  alihKapal       Float
  materai         Float
  lolo            Float
  segel           Float
  rc              Float
  lss             Float
  createDate      DateTime      @default(now())
  updateDate      DateTime      @updatedAt
  status          Boolean       @default(true)

  @@map("priceShippingDetails")
}

model UangJalan {
  id                  String            @id @default(auto()) @map("_id") @db.ObjectId
  priceVendorDetail   PriceVendorDetail @relation(fields: [priceVendorDetailId], references: [id])
  priceVendorDetailId String            @db.ObjectId
  truckType           String
  bbm                 Float
  tol                 Float
  biayaBuruh          Float
  meal                Float
  lainLain            Float
  createDate          DateTime          @default(now())
  updateDate          DateTime          @updatedAt
  status              Boolean           @default(true)

  @@map("uangJalan")
}

model ProductCategory {
  reff       String   @id @map("_id")
  name       String   @unique
  kendaraan  Boolean  @default(false)
  createDate DateTime @default(now())
  updateDate DateTime @updatedAt
  status     Boolean  @default(true)

  Product Product[]

  @@map("productCategories")
}

enum ProductType {
  Product
  SparePart
  ATK
}

model Product {
  skuCode      String           @id @map("_id")
  type         ProductType
  category     ProductCategory? @relation(fields: [categoryReff], references: [reff])
  categoryReff String?
  name         String           @unique
  satuan       String
  createDate   DateTime         @default(now())
  updateDate   DateTime         @updatedAt
  status       Boolean          @default(true)

  @@map("products")
}

model Quotation {
  number             String            @id @map("_id")
  serviceType        String
  marketing          Sales             @relation(fields: [marketingCode], references: [code])
  marketingCode      String
  shipper            Customer          @relation(fields: [shipperCode], references: [code])
  shipperCode        String
  effectiveStartDate DateTime
  effectiveEndDate   DateTime
  details            QuotationDetail[]
  createDate         DateTime          @default(now())
  updateDate         DateTime          @updatedAt

  PriceShipper PriceShipper[]

  @@map("quotations")
}

enum QuotationDetailStatusPPFTZ {
  Include
  Exclude
  TidakAda
}

enum QuotationDetailStatusInsurance {
  Include
  Exclude
  TidakAda
}

enum QuotationDetailStatusPPN {
  Include
  Exclude
}

model QuotationDetail {
  id                         String                         @id @default(auto()) @map("_id") @db.ObjectId
  quotation                  Quotation                      @relation(fields: [quotationNumber], references: [number])
  quotationNumber            String
  route                      Route                          @relation("route", fields: [routeCode], references: [code])
  routeCode                  String
  deliveryTo                 Customer                       @relation("deliveryTo", fields: [deliveryToCode], references: [code])
  deliveryToCode             String
  port                       Port                           @relation(fields: [portCode], references: [code])
  portCode                   String
  containerSize              String
  containerType              String
  trackingAsalVendor         Customer                       @relation("trackingAsalVendor", fields: [trackingAsalVendorCode], references: [code])
  trackingAsalVendorCode     String
  trackingAsalRoute          Route                          @relation("trackingAsalRoute", fields: [trackingAsalRouteCode], references: [code])
  trackingAsalRouteCode      String
  trackingTujuanVendor       Customer                       @relation("trackingTujuanVendor", fields: [trackingTujuanVendorCode], references: [code])
  trackingTujuanVendorCode   String
  trackingTujuanRoute        Route                          @relation("trackingTujuanRoute", fields: [trackingTujuanRouteCode], references: [code])
  trackingTujuanRouteCode    String
  shippingDetailShipping     Customer                       @relation("shippingDetailShipping", fields: [shippingDetailShippingCode], references: [code])
  shippingDetailShippingCode String
  shippingDetailRoute        Route                          @relation("shippingDetailRoute", fields: [shippingDetailRouteCode], references: [code])
  shippingDetailRouteCode    String
  adminBL                    Float
  cleaning                   Float
  alihKapal                  Float
  materai                    Float
  biayaBuruh                 Float
  stuffingDalam              Float
  stuffingLuar               Float
  biayaCetakRC               Float
  biayaCetakIR               Float
  statusPPFTZ                QuotationDetailStatusPPFTZ
  ppftz                      Float?
  statusInsurance            QuotationDetailStatusInsurance
  insurance                  Float?
  biayaAdminInsurance        Float?
  statusPPN                  QuotationDetailStatusPPN
  hargaJual                  Float
  isConfirmed                Boolean                        @default(false)
  createDate                 DateTime                       @default(now())
  updateDate                 DateTime                       @updatedAt
  status                     Boolean                        @default(true)

  @@map("quotationDetails")
}

model VesselSchedule {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  month               String
  shipping            Customer @relation(fields: [shippingCode], references: [code])
  shippingCode        String
  vessel              Vessel   @relation(fields: [vesselId], references: [id])
  vesselId            String   @db.ObjectId
  voyage              String
  quota               String
  portOrigin          Port     @relation("portOrigin", fields: [portOriginCode], references: [code])
  portOriginCode      String
  portDestination     Port     @relation("portDestination", fields: [portDestinationCode], references: [code])
  portDestinationCode String
  openStackDate       DateTime
  rcClosingDate       DateTime
  rcClosingTime       DateTime
  vesselClosingDate   DateTime
  vesselClosingTime   DateTime
  etd                 DateTime
  eta                 DateTime
  createDate          DateTime @default(now())
  updateDate          DateTime @updatedAt
  status              Boolean  @default(true)

  @@map("vesselSchedules")
}

model InquiryContainer {
  number       String                   @id @map("_id")
  sales        Sales                    @relation(fields: [salesCode], references: [code])
  salesCode    String
  shipper      Customer                 @relation("shipper", fields: [shipperCode], references: [code])
  shipperCode  String
  purchase     Customer                 @relation("purchaseShipper", fields: [purchaseCode], references: [code])
  purchaseCode String
  details      InquiryContainerDetail[]
  createDate   DateTime                 @default(now())
  updateDate   DateTime                 @updatedAt

  @@map("inquiryContainers")
}

model InquiryContainerDetail {
  id            String           @id @default(auto()) @map("_id") @db.ObjectId
  inquiry       InquiryContainer @relation(fields: [inquiryNumber], references: [number])
  inquiryNumber String
  jobOrderType  String
  typeOrder     String
  loadDate      DateTime
  route         Route            @relation(fields: [routeCode], references: [code])
  routeCode     String
  containerSize String
  shipping      Customer         @relation(fields: [shippingCode], references: [code])
  shippingCode  String
  vessel        Vessel           @relation(fields: [vesselId], references: [id])
  vesselId      String           @db.ObjectId
  voyage        String
  createDate    DateTime         @default(now())
  updateDate    DateTime         @updatedAt
  status        Boolean          @default(true)

  @@map("inquiryContainerDetails")
}
